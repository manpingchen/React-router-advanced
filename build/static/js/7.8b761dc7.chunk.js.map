{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","quoteId","useParams","useHttp","getSingleQuote","sendRequest","data","status","error","useEffect","LoadingSpinner","to"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,wFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBCuCVC,UAtCK,WAClB,IAAQC,EAAYC,cAAZD,QACR,EAAoDE,YAAQC,KAAgB,GAApEC,EAAR,EAAQA,YAAmBR,EAA3B,EAAqBS,KAAaC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,MAM1C,OAJAC,qBAAU,WACRJ,EAAYJ,KACX,CAACI,EAAaJ,IAEF,YAAXM,EAEA,qBAAKZ,UAAU,WAAf,SACE,cAACe,EAAA,EAAD,MAKS,cAAXH,GAA2BV,EAAMC,KAIjCU,EACK,mBAAGb,UAAU,WAAb,SAAyBa,IAIhC,oCACE,4CAAeP,KACf,cAAC,EAAD,CAAkBH,KAAMD,EAAMC,KAAMC,OAAQF,EAAME,SAClD,qBAAKJ,UAAU,WAAf,SACE,cAAC,IAAD,CAAMgB,GAAG,WAAWhB,UAAU,YAA9B,6BAIF,cAAC,IAAD,OAhBK","file":"static/js/7.8b761dc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\nimport { Link, Outlet, useParams } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const { quoteId } = useParams();\n  const { sendRequest, data: quote, status, error } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && !quote.text) {\n    return <p>No quote found</p>;\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  return (\n    <section>\n      <h1>Quote for {quoteId}</h1>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <div className=\"centered\">\n        <Link to=\"comments\" className=\"btn--flat\">\n          Load Comments\n        </Link>\n      </div>\n      <Outlet />\n    </section>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}