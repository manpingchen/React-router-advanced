{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sorting","onClick","quotes","ascending","pathname","sort","quoteA","quoteB","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","data","status","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAIN,EAAMO,GAAhC,iC,iBCmCSC,EA/BG,SAACR,GACjB,IAAMS,EAAWC,cACXC,EAAWC,cAGXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAU3C,OACE,eAAC,WAAD,WACE,qBAAKf,UAAWC,IAAQe,QAAxB,SACE,yBAAQC,QAXe,WAjBZ,IAACC,EAAQC,EAkBxBX,EAAS,CACPY,SAAUV,EAASU,SACnBN,OAAQ,SAAWF,EAAqB,OAAS,SApBnCM,EAsBLnB,EAAMmB,OAtBOC,EAsBCP,EArBpBM,EAAOG,MAAK,SAACC,EAAQC,GAC1B,OAAIJ,EACKG,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE7BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,MAuBlC,kBACQM,EAAqB,aAAe,iBAG9C,oBAAIZ,UAAWC,IAAQuB,KAAvB,SACGzB,EAAMmB,OAAOO,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAA0BpB,GAAIoB,EAAMpB,GAAIF,OAAQsB,EAAMtB,OAAQD,KAAMuB,EAAMvB,MAA1DuB,EAAMpB,a,iBC1BjBqB,EAXO,WACpB,OACE,sBAAK3B,UAAWC,IAAQ2B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM5B,UAAU,MAAMK,GAAG,aAAzB,6B,uBC+BSwB,UA/BG,WAChB,MAA6CC,YAAQC,KAAc,GAA3DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,MAMnC,OAJAC,qBAAU,WACRJ,MACC,CAACA,IAEW,YAAXE,EAEA,qBAAKlC,UAAU,WAAf,SACE,cAACqC,EAAA,EAAD,MAKFF,EACK,mBAAGnC,UAAU,mBAAb,SAAiCmC,IAG3B,cAAXD,GAA2C,IAAhBD,EAAKK,QAAiBL,EAKnD,eAAC,WAAD,WACE,6CACK,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMK,QAAS,GAAK,cAAC,EAAD,CAAWpB,OAAQe,OANnC,cAAC,EAAD","file":"static/js/5.6d647e77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={props.id}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = () => {\n    navigate({\n      pathname: location.pathname,\n      search: `sort=` + (isSortingAscending ? \"desc\" : \"asc\"),\n    });\n    sortQuotes(props.quotes, isSortingAscending);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem key={quote.id} id={quote.id} author={quote.author} text={quote.text} />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Fragment, useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const { sendRequest, data, status, error } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (data.length === 0 || !data)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <h1>All Quotes</h1>\n      {data?.length > 0 && <QuoteList quotes={data} />}\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}